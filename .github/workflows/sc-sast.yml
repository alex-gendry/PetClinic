name: Fortify ScanCentral SAST Scan
on:
  workflow_dispatch:
  push:
    # Master or main branch that you want to trigger this workflow for
    branches: [7.0-gh-sast]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [7.0-gh-sast]
  

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_CONTEXT"
  Fortify-SAST:
    # Use the appropriate runner for building your source code
    runs-on: self-hosted
    env:
      SC_CONTROLLER_URL: ${{ secrets.SC_CONTROLLER_URL }}
      SSC_UPLOAD_TOKEN: ${{ secrets.SSC_UPLOAD_TOKEN }}
      FTFY_SSC_URL: ${{ secrets.FTFY_SSC_URL }}
      FTFY_CI_TOKEN_DEC: ${{ secrets.FTFY_CI_TOKEN_DEC }}
      CLIENT_AUTH_TOKEN: ${{ secrets.CLIENT_AUTH_TOKEN }}
      APPLICATION: "${{ github.event.repository.name }}"
      VERSION: "${{ github.event.ref_name }}"
      BUILD_OPTS: "-bt mvn"

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v2
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }} 

      ### Run Fortify SAST ###
      # Login
      - name: Login to SSC
        run: fcli ssc session login --url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC
      - name: Login to SC SAST
        run:  fcli sc-sast session login --ssc-url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC -c $CLIENT_AUTH_TOKEN
      # Create appversion
      - run: fcli ssc appversion create ${APPLICATION}:${VERSION} --auto-required-attrs --skip-if-exists

      # Package sources
      - run: |
          scancentral package $BUILD_OPTS -o package.zip
          mvn dependency:tree -DoutputFile=.debricked-maven-dependencies.tgf -DoutputType=tgf
          zip -r package.zip .debricked-maven-dependencies.tgf

      # Run Scan
      - run: fcli sc-sast scan start -p package.zip --sensor-version 22.2 --appversion ${APPLICATION}:${VERSION} --store '?'

      # Wait for SAST scan to complete
      - run: fcli sc-sast scan wait-for '?' -i 30s

      # Clean up tokens, session variables, ...
      - run: |
          fcli sc-sast session logout --no-revoke-token
          fcli ssc session logout --no-revoke-token

      ### Archive ScanCentral Client logs on failure ###
      - name: Save ScanCentral Logs
        uses: actions/upload-artifact@v2                
        if: failure()
        with:
           name: scancentral-logs
           path: ~/.fortify/scancentral/log
