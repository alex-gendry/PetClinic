stages:
  - create-version
  - static
  - docker_start
  - dynamic
  - docker_stop

variables:
  DOCKER_REGISTRY: docker.ekseed.org
  IMAGE_NAME: ${CI_PROJECT_NAME}
  FTFY_APPLICATION: "PetClinic"
  SCDAST_SETTINGS: "43649822-4a65-4391-bd82-8d15886c941e"
  FTFY_BUILD: "$FTFY_PROJECT-$CI_COMMIT_BRANCH"
  FTFY_FPR_FILE: "gitlab-$FTFY_BUILD.fpr"
  IQ_APP: "petclinic"
  IQ_STAGE: "build"
  FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: GCBJqBPr7qd5dgkf

create-version:
  stage: static
  image: docker.ekseed.org/sast-client:22.2.0-linux
  script:
    - fcli ssc session login --url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC

    # Create appversion
    - fcli ssc appversion create ${CI_PROJECT_TITLE}:${CI_COMMIT_REF_NAME} --auto-required-attrs --skip-if-exists

sast-scan:
  stage: static
  image: docker.ekseed.org/sast-client:22.2.0-linux
  # Run Fortify ScanCentral Client. SSC_URL and SSC_TOKEN are expected as GitLab CICD Variables in the template (masking recommended).
  variables:
    PACKAGE_FOLDER: package
  needs:
    - create-version
  script:
    - cd petclinic-3.0
    - fcli ssc session login --url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC
    - fcli sc-sast session login --ssc-url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC -c $FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN

    # Package sources
    - scancentral package -bt mvn  -o package.zip
    - mvn dependency:tree -DoutputFile=.debricked-maven-dependencies.tgf -DoutputType=tgf
    - zip -r package.zip .debricked-maven-dependencies.tgf

    # Run Scan
    - fcli sc-sast scan start -p package.zip --sensor-version 22.2 --appversion ${CI_PROJECT_TITLE}:${CI_COMMIT_REF_NAME} --store '?'

    # Wait for SAST scan to complete
    - fcli sc-sast scan wait-for '?' -i 30s

    # Clean up tokens, session variables, ...
    - fcli sc-sast session logout --no-revoke-token
    - fcli ssc session logout --no-revoke-token
  tags:
    - kubernetes
    - docker
    - linux


sca-scan:
  stage: static
  image: docker.ekseed.org/sast-client:22.2.0-linux
  needs:
    - create-version
  script:
#    - docker build -t docker.ekseed.org/${CI_COMMIT_REF_NAME} .
#    - docker save docker.ekseed.org/${CI_COMMIT_REF_NAME} >> ${CI_COMMIT_REF_NAME}.tar
    - cd petclinic-3.0
    - mvn dependency:copy-dependencies
    - nexus-iq-cli --server-url ${IQ_URL} --authentication ${IQ_TOKEN} --application-id ${IQ_APP} --stage ${IQ_STAGE} target/dependency pom.xml
    - iq-integration -iqurl ${IQ_URL}  -iquser $IQ_USERNAME -iqpassword $IQ_PASSWORD -iqproject ${IQ_APP} -iqstage build -sscurl $FTFY_SSC_URL -ssctoken ${FTFY_CI_TOKEN_ENC} -sscapp ${CI_PROJECT_TITLE} -sscversion ${CI_COMMIT_REF_NAME}
  tags:
    - kubernetes
    - docker
    - linux



build_n_start:
  stage: docker_start
  needs:
    - create-version
  script:
    ## Login to docker registry
    - sudo docker login --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD} ${DOCKER_REGISTRY}
    - sudo docker build . -t docker.ekseed.org/petclinic:$CI_COMMIT_SHORT_SHA
    - sudo docker run -d --name ${CI_PROJECT_TITLE}-$CI_COMMIT_SHORT_SHA --rm -p 8880:8080 docker.ekseed.org/petclinic:$CI_COMMIT_SHORT_SHA
  tags:
    - fortify-ubuntu
    - shell
      
dast-scan:
  stage: dynamic
  image: docker.ekseed.org/sast-client:22.2.0-linux
  needs:
    - build_n_start
  script:
    - fcli sc-dast session login --ssc-url ${FTFY_SSC_URL} --ci-token=${FTFY_ENC_TOKEN}
    - fcli sc-dast scan start --settings=${SCDAST_SETTINGS}  --store=dastscan "${CI_PROJECT_TITLE}-${CI_COMMIT_BRANCH}-$CI_COMMIT_SHORT_SHA"
    - fcli sc-dast scan wait-for -u=Complete {?dastscan:id}
  tags :
    - kubernetes
    - docker
    - linux

stop_app:
  stage: docker_stop
  needs:
    - dast-scan
  script:
    ## Login to docker registry
    - sudo docker login --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD} ${DOCKER_REGISTRY}
    - sudo docker stop ${CI_PROJECT_TITLE}-$CI_COMMIT_SHORT_SHA
  tags:
    - fortify-ubuntu
    - shell


