stages:
  - static

variables:
  DOCKER_REGISTRY: docker.ekseed.org
  IMAGE_NAME: ${CI_PROJECT_NAME}
  FTFY_APPLICATION: "PetClinic"
  SCDAST_SETTINGS: "b8ab112c-023c-461b-b6a6-5e2c8c0d7fa9"
  FTFY_PROJECT: "PetClinic"
  FTFY_BUILD: "$FTFY_PROJECT-$CI_COMMIT_BRANCH"
  FTFY_FPR_FILE: "gitlab-$FTFY_BUILD.fpr"
  IQ_APP: "petclinic"
  IQ_STAGE: "build"
  FCLI_DEFAULT_SSC_URL: $FTFY_SSC_URL
  FCLI_DEFAULT_SSC_CI_TOKEN: $FTFY_ENC_TOKEN
  FCLI_DEFAULT_SSC_TOKEN: $FTFY_ENC_TOKEN
  FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: GCBJqBPr7qd5dgkf
  FCLI_SC_SAST_SCAN_CI_TOKEN: $FTFY_ENC_TOKEN


sast-scan:
  stage: static
  image: fortifydocker/fortify-ci-tools
  # Run Fortify ScanCentral Client. SSC_URL and SSC_TOKEN are expected as GitLab CICD Variables in the template (masking recommended).
  script:
    - fcli ssc session login --url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC
    - fcli sc-sast session login --ssc-url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC -c $FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN

    # Create appversion    
    - fcli ssc appversion create ${FTFY_PROJECT}:${CI_COMMIT_REF_NAME} --auto-required-attrs --skip-if-exists

    # Package sources & run SAST scan
    - scancentral package -bt mvn -bc compile -o package.zip
    - fcli sc-sast scan start -p package.zip --sensor-version 22.2 --appversion ${FTFY_PROJECT}:${CI_COMMIT_REF_NAME} --store '?'
    
    # Wait for SAST scan to complete
    - fcli sc-sast scan wait-for '?' -i 30s

    # Clean up tokens, session variables, ...
    - fcli sc-sast session logout --no-revoke-token
    - fcli ssc session logout --no-revoke-token
  artifacts:
    paths:
      - package.zip
  tags:
    - docker-exec
    - linux
  


