stages:
  - scan
  - upload
  - docker_push
  - docker_rm

variables:
  DOCKER_REGISTRY: docker.ekseed.org
  IMAGE_NAME: ${CI_PROJECT_NAME}
  FTFY_PROJECT: "petclinic"
  FTFY_BUILD: "$FTFY_PROJECT-$CI_COMMIT_BRANCH"
  FTFY_FPR_FILE: "$CI_COMMIT_SHORT_SHA-gitlab_com-$FTFY_BUILD.fpr"
  FTFY_SSC_URL: "https://ssc.ekseed.org/ssc"


SAST-scan:
  stage: scan
  script:
    - /fortify/SCA_21.2.1/bin/sourceanalyzer -verbose -debug -b $FTFY_BUILD -clean
    - ./mvnw dependency:copy-dependencies
    - /fortify/SCA_21.2.1/bin/sourceanalyzer -verbose -debug -b $FTFY_BUILD -cp target/dependency/*.jar src/main/**/*.java
    - /fortify/SCA_21.2.1/bin/sourceanalyzer -verbose -debug -b $FTFY_BUILD -cp target/dependency/*.jar src/main/**/*.jsp
    - /fortify/SCA_21.2.1/bin/sourceanalyzer -verbose -debug -b $FTFY_BUILD -show-files
    - /fortify/SCA_21.2.1/bin/sourceanalyzer -verbose -debug -b $FTFY_BUILD -scan -f $FTFY_FPR_FILE
  artifacts:
    name: FPR_FILE
    paths:
      - $FTFY_FPR_FILE
  tags:
    - fortify-ubuntu


SAST-upload:
  stage: upload
  dependencies:
    - SAST-scan
  script:
    - echo $FTFY_PROJECT
    - echo $CI_COMMIT_BRANCH
    - /fortify/SCA_21.2.1/bin/fortifyclient -debug -url $FTFY_SSC_URL -authtoken $FTFY_CI_TOKEN uploadFPR -application $FTFY_PROJECT -applicationVersion $CI_COMMIT_BRANCH -file $FTFY_FPR_FILE
  tags:
    - fortify-ubuntu
