stages:
  - build
  - static
  - docker_start
  - dynamic
  - docker_stop

variables:
  DOCKER_REGISTRY: docker.ekseed.org
  IMAGE_NAME: ${CI_PROJECT_NAME}
  FTFY_APPLICATION: "PetClinic"
  SCDAST_SETTINGS: 	75f34b70-c5d4-4d26-a54c-b6c3d5382b2f
  FTFY_PROJECT: "PetClinic"
  FTFY_BUILD: "$FTFY_PROJECT-$CI_COMMIT_BRANCH"
  FTFY_FPR_FILE: "gitlab-$FTFY_BUILD.fpr"
  IQ_APP: "petclinic"
  IQ_STAGE: "build"
  FCLI_DEFAULT_SSC_URL: $FTFY_SSC_URL
  FCLI_DEFAULT_SSC_CI_TOKEN: $FTFY_ENC_TOKEN
  FCLI_DEFAULT_SSC_TOKEN: $FTFY_ENC_TOKEN
  FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: GCBJqBPr7qd5dgkf
  FCLI_SC_SAST_SCAN_CI_TOKEN: $FTFY_ENC_TOKEN

build:
  stage: build
  image: maven
  script:
    - ls -al
    - mvn compile
    - ls -al
  artifacts:
    paths:
      - lib
      - target
  tags:
    - docker-exec
    - linux

sast-scan:
  stage: static
  image: fortifydocker/fortify-ci-tools
  dependencies: 
    - build
  # Run Fortify ScanCentral Client. SSC_URL and SSC_TOKEN are expected as GitLab CICD Variables in the template (masking recommended).
  script:
    - fcli ssc session login --url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC
    - fcli sc-sast session login --ssc-url $FTFY_SSC_URL -t $FTFY_CI_TOKEN_DEC -c $FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN

    # Create appversion    
    - fcli ssc appversion create ${FTFY_PROJECT}:${CI_COMMIT_REF_NAME} --auto-required-attrs --skip-if-exists

    # Package sources & run SAST scan
    - scancentral package -bt none -o package.zip 
    - fcli sc-sast scan start -p package.zip --sensor-version 22.2 --appversion ${FTFY_PROJECT}:${CI_COMMIT_REF_NAME} --store '?'
    
    # Wait for SAST scan to complete
    - fcli sc-sast scan wait-for '?' -i 30s

    # Clean up tokens, session variables, ...
    - fcli sc-sast session logout --no-revoke-token
    - fcli ssc session logout --no-revoke-token
  artifacts:
    paths:
      - package.zip
  tags:
    - docker-exec
    - linux
    
build_n_start:
  stage: docker_start
  script:
    ## Login to docker registry
    - docker login --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD} ${DOCKER_REGISTRY}
    - docker build . -t docker.ekseed.org/petclinic:$CI_COMMIT_SHORT_SHA
    - docker run -d --name petclinic-$CI_COMMIT_SHORT_SHA --rm -p 8880:8080 docker.ekseed.org/petclinic:$CI_COMMIT_SHORT_SHA
  tags:
    - fortify-ubuntu
    - shell
      
dast-scan:
  stage: dynamic
  needs:
    - build_n_start
  image: fortifydocker/fortify-ci-tools
  script:
    - fcli sc-dast session login --ssc-url ${FTFY_SSC_URL} --ssc-ci-token ${FTFY_ENC_TOKEN}
    - fcli sc-dast scan start --settings=${SCDAST_SETTINGS}  --start-url=http://fortify-ubuntu.ekseed.org:8880/petclinic --store dastscan "petclinic-${CI_COMMIT_BRANCH}-$CI_COMMIT_SHORT_SHA"
    - fcli sc-dast scan wait-for -u=Complete '{?dastscan:id}'  -i 30s
#  allow_failure: true
  tags :
    - docker-exec

stop_app:
  stage: docker_stop
  needs:
    - dast-scan
  script:
    ## Login to docker registry
    - docker stop petclinic-$CI_COMMIT_SHORT_SHA
  tags:
    - fortify-ubuntu
    - shell


